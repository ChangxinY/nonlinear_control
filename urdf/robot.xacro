<?xml version="1.0"?>
<robot name="car_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Numerical Macros - units are meters and radians -->
  <xacro:property name="wheel_separation" value="0.070" /> 
  <xacro:property name="wheel_radius" value="0.034" /> 
  <xacro:property name="wheel_width"  value="0.010" />
  <xacro:property name="body_height"  value="0.1" /> 
  <xacro:property name="body_width"   value="0.050" /> 
  <xacro:property name="body_length"  value="0.035" />
  <xacro:property name="camera_link_height"  value="0.07" /> 
  <xacro:property name="camera_link_width"   value="0.005" /> 
  <xacro:property name="camera_link_length"  value="0.005" />

   <link name="edumip_body">

    <visual>
      <origin xyz="0 0 ${0.5*body_height}" rpy="0 -0.2 0" />
      <geometry>
        <box size="${body_length} ${body_width} ${body_height}" />
      </geometry>
      <material name="Blue">
      	<color rgba="0 0.0 1.0 0.5" />
      </material>
    </visual>

    <collision>
      <origin xyz="0 0 ${0.5*body_height}" rpy="0 -0.2 0" />
      <geometry>
        <box size="${body_length} ${body_width} ${body_height}" />
      </geometry>
    </collision>

  <inertial>
    <origin xyz="0 0 ${0.5*body_height}" rpy="0 0 0"/> 
    <mass value="0.180"/>
    <inertia ixx="6.0e-4" ixy="0" ixz="0" iyy="6.0e-4" iyz="0" izz="6.0e-4"/>
  </inertial>
   </link>

   <link name="wheelR">

    <visual>
      <origin xyz="0 0 0" rpy="1.57079 0 0" />
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}" />
      </geometry>
      <material name="Green">
      	<color rgba="0.0 1.0 0.0 0.5" />
      </material>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="1.57079 0 0" />
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}" />
      </geometry>
    </collision>

  <inertial>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <mass value="0.030"/>
    <inertia ixx="1.75e-5" ixy="0" ixz="0" iyy="1.75e-5" iyz="0" izz="1.75e-5"/>
  </inertial>
   </link>

   <link name="wheelL">

    <visual>
      <origin xyz="0 0 0" rpy="1.57079 0 0" />
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}" />
      </geometry>
      <material name="Red">
      	<color rgba="1 0 0 0.5" />
      </material>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="1.57079 0 0" />
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}" />
      </geometry>
    </collision>

  <inertial>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <mass value="0.030"/>
    <inertia ixx="1.75e-5" ixy="0" ixz="0" iyy="1.75e-5" iyz="0" izz="1.75e-5"/>
  </inertial>
   </link>


     <!-- Camera -->
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
  <box size="${camera_link_length} ${camera_link_width} ${camera_link_height}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
  <box size="${camera_link_length} ${camera_link_width} ${camera_link_height}"/>
      </geometry>
      <material name="Yellow"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <!-- Hokuyo Laser -->
  <link name="hokuyo_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
  <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

<joint name="camera_joint" type="fixed">
  <parent link="edumip_body"/>
  <child link="camera_link"/>
  <origin xyz="0 0 ${body_height}" rpy="0 0 0"/>
  <axis xyz="0 1 0"/>
</joint>

  <joint name="hokuyo_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0 0 ${(body_height+camera_link_height)*0.6}" rpy="0 0 0"/>
    <parent link="edumip_body"/>
    <child link="hokuyo_link"/>
  </joint>

   <joint name="jointR" type="continuous">
    <parent link="edumip_body" />
    <child link="wheelR" />
    <origin xyz="0 ${-wheel_separation * 0.5} 0" rpy="0 0 0" />
    <axis xyz="0 1 0" />
    <dynamics friction="0.0"/>
   </joint>

   <joint name="jointL" type="continuous">
    <parent link="edumip_body" />
    <child link="wheelL" />
    <origin xyz="0 ${+wheel_separation * 0.5} 0" rpy="0 0 0" />
    <axis xyz="0 1 0" />
    <dynamics friction="0.0"/>
   </joint>


 <gazebo reference="edumip_body">
   <material>Gazebo/Blue</material>
   <mu1>0.2</mu1>
   <mu2>0.2</mu2>    
 </gazebo>
 <gazebo reference="wheelR">
   <material>Gazebo/Green</material>
   <mu1>0.2</mu1>
   <mu2>0.2</mu2>    
 </gazebo>
 <gazebo reference="wheelL">
   <material>Gazebo/Red</material>
   <mu1>0.2</mu1>
   <mu2>0.2</mu2>    
 </gazebo>

<gazebo reference="camera_link">
  <material>Gazebo/Yellow</material>
</gazebo>


<gazebo>
 <plugin name="edumip_balance_ros_gazebo_plugin" filename="libedumip_balance_ros_gazebo_plugin.so">
 <rosDebugLevel>3</rosDebugLevel>
 <updateRate>100</updateRate>
 <robotBaseFrame>edumip_body</robotBaseFrame>
 <leftJoint>jointL</leftJoint>
 <rightJoint>jointR</rightJoint>
 <wheelSeparation>${wheel_separation}</wheelSeparation>
 <wheelDiameter>${wheel_radius*2.0}</wheelDiameter>
 <commandTopic>/edumip/cmd</commandTopic>
 <stateTopic>/edumip/state</stateTopic> 
 </plugin>
</gazebo>

 <gazebo reference="camera_link">
 <sensor type="camera" name="camera1">
   <update_rate>30.0</update_rate>
   <camera name="head">
     <horizontal_fov>1.3962634</horizontal_fov>
     <image>
       <width>800</width>
       <height>800</height>
       <format>R8G8B8</format>
     </image>
     <clip>
       <near>0.02</near>
       <far>300</far>
     </clip>
     <noise>
       <type>gaussian</type>
       <mean>0.0</mean>
       <stddev>0.007</stddev>
     </noise>
   </camera>
   <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
     <robotNamespace>edumip</robotNamespace>
     <alwaysOn>true</alwaysOn>
     <updateRate>10.0</updateRate>
     <cameraName>camera1</cameraName>
     <imageTopicName>image_raw</imageTopicName>
     <cameraInfoTopicName>camera_info</cameraInfoTopicName>
     <frameName>camera_link</frameName>
     <hackBaseline>0.07</hackBaseline>
     <distortionK1>0.0</distortionK1>
     <distortionK2>0.0</distortionK2>
     <distortionK3>0.0</distortionK3>
     <distortionT1>0.0</distortionT1>
     <distortionT2>0.0</distortionT2>
   </plugin>
 </sensor>
</gazebo>

  <!-- hokuyo -->
  <gazebo reference="hokuyo_link">
      <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/edumip/laser/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

</robot>
